{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alejandro\\\\Documents\\\\visual\\\\shotreel-react-Grupos\\\\Web\\\\src\\\\components\\\\scene\\\\EditSceneStoryBoard.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from \"react\";\nimport HorizontalDivider from \"../HorizontalDivider\";\nimport PanelButtonsBelow from \"../Buttons/PanelButtonsBelow\";\nimport { CardStoryBoard } from \"../cards/CardStoryBoard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function EditSceneStoryBoard({\n  valor,\n  setValor\n}) {\n  _s();\n  const popUpEditScene = useRef(null);\n  const colorInput = useRef(null);\n  const [borderColor, setBorderColor] = useState(\"black\"); // Valor inicial\n\n  useEffect(function () {\n    if (valor === 1) {\n      sowPopUp();\n      setValor(0);\n    }\n  });\n\n  // Dentro de tu componente\n  useEffect(() => {\n    if (colorInput.current) {\n      colorInput.current.addEventListener(\"input\", event => {\n        setBorderColor(event.target.value);\n      });\n    }\n  }, [colorInput]);\n  function sowPopUp() {\n    if (popUpEditScene.current.className === \"popUpRemoveBack\") {\n      popUpEditScene.current.className = \"hidden\";\n    } else {\n      popUpEditScene.current.className = \"popUpRemoveBack\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: popUpEditScene,\n      className: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popUpRemovePanel\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Edit Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panelContentEdit\",\n          children: /*#__PURE__*/_jsxDEV(CardStoryBoard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(PanelButtonsBelow, {\n        text: \"Save\",\n        icon: \"update\",\n        clickCancel: () => sowPopUp(),\n        clickCreate: () => sowPopUp()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_s(EditSceneStoryBoard, \"fWk+A4IyOC7STN7N+ItgQSIhIY4=\");\n_c = EditSceneStoryBoard;\nvar _c;\n$RefreshReg$(_c, \"EditSceneStoryBoard\");","map":{"version":3,"names":["useRef","useEffect","useState","HorizontalDivider","PanelButtonsBelow","CardStoryBoard","jsxDEV","_jsxDEV","Fragment","_Fragment","EditSceneStoryBoard","valor","setValor","_s","popUpEditScene","colorInput","borderColor","setBorderColor","sowPopUp","current","addEventListener","event","target","value","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","text","icon","clickCancel","clickCreate","_c","$RefreshReg$"],"sources":["C:/Users/Alejandro/Documents/visual/shotreel-react-Grupos/Web/src/components/scene/EditSceneStoryBoard.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from \"react\";\r\nimport HorizontalDivider from \"../HorizontalDivider\";\r\nimport PanelButtonsBelow from \"../Buttons/PanelButtonsBelow\";\r\nimport { CardStoryBoard } from \"../cards/CardStoryBoard\";\r\n\r\nexport function EditSceneStoryBoard({ valor, setValor }) {\r\n  const popUpEditScene = useRef(null);\r\n  const colorInput = useRef(null);\r\n  const [borderColor, setBorderColor] = useState(\"black\"); // Valor inicial\r\n\r\n  useEffect(function () {\r\n    if (valor === 1) {\r\n      sowPopUp();\r\n      setValor(0);\r\n    }\r\n  });\r\n\r\n  // Dentro de tu componente\r\n  useEffect(() => {\r\n    if (colorInput.current) {\r\n      colorInput.current.addEventListener(\"input\", (event) => {\r\n        setBorderColor(event.target.value);\r\n      });\r\n    }\r\n  }, [colorInput]);\r\n\r\n  function sowPopUp() {\r\n    if (popUpEditScene.current.className === \"popUpRemoveBack\") {\r\n      popUpEditScene.current.className = \"hidden\";\r\n    } else {\r\n      popUpEditScene.current.className = \"popUpRemoveBack\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n          <div ref={popUpEditScene} className=\"hidden\">\r\n     \r\n     <div className=\"popUpRemovePanel\">\r\n     <p>Edit Location</p>\r\n     <HorizontalDivider/>\r\n       <div className=\"panelContentEdit\">\r\n        \r\n         <CardStoryBoard/>\r\n    \r\n       </div>\r\n     </div>\r\n     <PanelButtonsBelow text=\"Save\" icon=\"update\" clickCancel={()=>sowPopUp()} clickCreate={()=>sowPopUp()}/>\r\n\r\n   </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzD,OAAO,SAASC,mBAAmBA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAMC,cAAc,GAAGd,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMe,UAAU,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEzDD,SAAS,CAAC,YAAY;IACpB,IAAIU,KAAK,KAAK,CAAC,EAAE;MACfO,QAAQ,CAAC,CAAC;MACVN,QAAQ,CAAC,CAAC,CAAC;IACb;EACF,CAAC,CAAC;;EAEF;EACAX,SAAS,CAAC,MAAM;IACd,IAAIc,UAAU,CAACI,OAAO,EAAE;MACtBJ,UAAU,CAACI,OAAO,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;QACtDJ,cAAc,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MACpC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,SAASG,QAAQA,CAAA,EAAG;IAClB,IAAIJ,cAAc,CAACK,OAAO,CAACK,SAAS,KAAK,iBAAiB,EAAE;MAC1DV,cAAc,CAACK,OAAO,CAACK,SAAS,GAAG,QAAQ;IAC7C,CAAC,MAAM;MACLV,cAAc,CAACK,OAAO,CAACK,SAAS,GAAG,iBAAiB;IACtD;EACF;EAEA,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACMlB,OAAA;MAAKmB,GAAG,EAAEZ,cAAe;MAACU,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBAEjDlB,OAAA;QAAKiB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBACjClB,OAAA;UAAAkB,QAAA,EAAG;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpBvB,OAAA,CAACJ,iBAAiB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAClBvB,OAAA;UAAKiB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAE/BlB,OAAA,CAACF,cAAc;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNvB,OAAA,CAACH,iBAAiB;QAAC2B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,WAAW,EAAEA,CAAA,KAAIf,QAAQ,CAAC,CAAE;QAACgB,WAAW,EAAEA,CAAA,KAAIhB,QAAQ,CAAC;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErG;EAAC,gBACH,CAAC;AAEP;AAACjB,EAAA,CA/CeH,mBAAmB;AAAAyB,EAAA,GAAnBzB,mBAAmB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}